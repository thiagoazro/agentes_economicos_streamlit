import os
import pandas as pd
from dotenv import load_dotenv
from crewai import Agent, Task, Crew, Process
from langchain_openai import AzureChatOpenAI
from langchain_community.utilities import GoogleSerperAPIWrapper
from crewai_tools.tools import SerperDevTool


# === Carregar vari√°veis do ambiente (.env) ===
load_dotenv()

tool = SerperDevTool()

llm = AzureChatOpenAI(
    model="azure/" + os.getenv("AZURE_OPENAI_DEPLOYMENT_LLM"),
    azure_endpoint=os.getenv("AZURE_OPENAI_ENDPOINT"),
    api_key=os.getenv("AZURE_OPENAI_API_KEY"),
    api_version=os.getenv("AZURE_API_VERSION"),
    temperature=0.3
)
# === Ler os novos arquivos CSV localmente ===
try:
    df_top_10_acoes = pd.read_csv("data/top_10_acoes.csv")
    df_noticias_investimento = pd.read_csv("data/noticias_investimentos.csv")
    df_indices = pd.read_csv("data/indicadores_economicos.csv")
except FileNotFoundError as e:
    print(f"Erro: Arquivo CSV n√£o encontrado. Verifique os nomes e caminhos dos arquivos: {e}")
    print("Certifique-se que 'top_10_acoes.csv', 'noticias_investimento.csv' e 'indicadores_economicos.csv' est√£o na raiz do projeto.")
    exit()
# === Transformar os DataFrames em texto de contexto ===
contexto_top_10_acoes = df_top_10_acoes.to_markdown(index=False)
contexto_indices = df_indices.to_markdown(index=False)

# Assumindo que df_noticias_investimento tem colunas 'titulo', 'resumo', 'link'
# Ajuste se os nomes das colunas forem diferentes
contexto_noticias_investimentos = "\n".join([
    f"T√≠tulo: {row['titulo']}\nLink: {row['link']}"
    for _, row in df_noticias_investimento.iterrows()
]) if not df_noticias_investimento.empty else "Nenhuma not√≠cia de investimento carregada do CSV."


# === Juntar todo o contexto BASE (dos CSVs) ===
contexto_geral_csv = f"""
=== üìà Dados Hist√≥ricos de √çndices Economicos ===
{contexto_indices}

=== üì∞ Not√≠cias de Investimento Recentes (do CSV) ===
{contexto_noticias_investimentos}

=== üìä Top 10 A√ß√µes (do CSV) ===
{contexto_top_10_acoes}
"""
azure_deployment_name = os.getenv("AZURE_OPENAI_DEPLOYMENT_LLM")


# === Definir os agentes ===
analista_macroeconomico = Agent(
    role="Analista Macroecon√¥mico S√™nior",
    goal="Analisar o cen√°rio macroecon√¥mico brasileiro, com foco nos indicadores economicos e nas not√≠cias de investimento, para identificar tend√™ncias e seus impactos potenciais no mercado de a√ß√µes, especialmente nas a√ß√µes listadas no arquivo 'top_10_acoes.csv'.",
    backstory="Economista com vasta experi√™ncia na an√°lise da conjuntura econ√¥mica brasileira, indicadores economicos e seus efeitos sobre os ativos financeiros. Utiliza dados hist√≥ricos e informa√ß√µes de mercado atualizadas para embasar suas proje√ß√µes.",
    verbose=True,
    allow_delegation=False,
    tools=[tool],
    llm=llm,
    model_name=f"azure/{azure_deployment_name}"
)

especialista_em_acoes = Agent(
    role="Especialista em An√°lise de A√ß√µes da Bovespa",
    goal="Avaliar a√ß√µes da Bovespa, com √™nfase nas 'top_10_acoes.csv' mas n√£o se limitando a elas, com base na an√°lise macroecon√¥mica, dados fundamentalistas (se dispon√≠veis nos CSVs ou buscados) e not√≠cias de mercado. Gerar recomenda√ß√µes de COMPRA, VENDA ou MANTER para a√ß√µes espec√≠ficas, com justificativas claras.",
    backstory="Analista de investimentos (CNPI) focado no mercado de a√ß√µes brasileiro, com expertise em valuation de empresas e estrat√©gias de investimento. Busca identificar assimetrias e oportunidades no mercado, fornecendo recomenda√ß√µes acion√°veis.",
    verbose=True,
    allow_delegation=False, # Pode se tornar True se houver um agente de pesquisa de dados fundamentalistas dedicado
    tools=[tool],
    llm=llm,
    model_name=f"azure/{azure_deployment_name}"
)

redator_de_relatorios_de_investimento = Agent(
    role="Redator de Relat√≥rios de Investimento",
    goal="Consolidar a an√°lise macroecon√¥mica e as recomenda√ß√µes de a√ß√µes em um relat√≥rio final claro, conciso e bem estruturado para investidores. O relat√≥rio deve destacar as principais indica√ß√µes de a√ß√µes e suas justificativas.",
    backstory="Profissional de comunica√ß√£o com foco no mercado financeiro, especializado em transformar an√°lises t√©cnicas complexas em relat√≥rios de f√°cil compreens√£o para o p√∫blico investidor.",
    verbose=True,
    allow_delegation=False,
    tools=[],
    llm=llm,
    model_name=f"azure/{azure_deployment_name}"
)
# === Criar as tarefas ===

tarefa_analise_cenario = Task(
    description=(
        "1. Analise os dados dos indicadores economicos fornecidos no 'contexto_geral_csv' para entender as tend√™ncias recentes do mercado.\n"
        "2. Revise as 'Not√≠cias de Investimento Recentes (do CSV)' para capturar o sentimento e os eventos atuais do mercado.\n"
        "3. Utilize a ferramenta SerPerDevTool para buscar informa√ß√µes atualizadas (√∫ltimos 1-3 meses) sobre: "
        "a) Perspectivas para o IPCA, PIB, dolar, IGP-M e a taxa Selic no Brasil. "
        "b) Principais fatores macroecon√¥micos que est√£o afetando o mercado de a√ß√µes brasileiro. "
        "c) Not√≠cias relevantes sobre a economia brasileira que possam impactar investimentos.\n"
        "4. Sintetize essas informa√ß√µes para construir um panorama do cen√°rio macroecon√¥mico atual e suas implica√ß√µes para investidores em a√ß√µes.\n\n"
        "Contexto dos CSVs:\n"
        f"{contexto_geral_csv}"
    ),
    expected_output=(
        "Um relat√≥rio conciso sobre o cen√°rio macroecon√¥mico brasileiro, destacando: \n"
        "- An√°lise da trajet√≥ria recente dos indices economicos obtidos e suas perspectivas.\n"
        "- Principais not√≠cias e eventos de investimento relevantes (do CSV e da pesquisa online).\n"
        "- Impactos esperados desse cen√°rio no mercado de a√ß√µes brasileiro em geral."
    ),
    agent=analista_macroeconomico
)

tarefa_indicacao_acoes = Task(
    description=(
        "1. Com base na an√°lise do cen√°rio macroecon√¥mico (fornecida pela tarefa anterior), avalie as a√ß√µes listadas no arquivo 'top_10_acoes.csv'.\n"
        "2. Para cada a√ß√£o no 'top_10_acoes.csv', utilize a ferramenta SerperDevTool para buscar: "
        "a) Not√≠cias recentes e espec√≠ficas sobre a empresa e seu setor. "
        "b) An√°lises e perspectivas de mercado para essa a√ß√£o (pre√ßo-alvo, recomenda√ß√µes de outras casas de an√°lise, etc.). "
        "c) Informa√ß√µes sobre os fundamentos da empresa, se n√£o estiverem detalhados no CSV (ex: P/L, dividend yield, endividamento).\n"
        "3. Se julgar pertinente, pesquise tamb√©m outras a√ß√µes da Bovespa que possam representar boas oportunidades ou riscos no cen√°rio atual.\n"
        "4. Formule recomenda√ß√µes de INVESTIMENTO (COMPRA, VENDA ou MANTER) para pelo menos 5 a√ß√µes (priorizando as do 'top_10_acoes.csv', mas podendo incluir outras). Cada recomenda√ß√£o deve ser acompanhada de uma justificativa clara, baseada na an√°lise macroecon√¥mica, setorial, not√≠cias e dados da empresa.\n\n"
        "Contexto dos CSVs (especialmente 'Top 10 A√ß√µes'):\n"
        f"{contexto_top_10_acoes}" # Foco principal, mas n√£o exclusivo
    ),
    expected_output=(
        "Um relat√≥rio de indica√ß√µes de a√ß√µes contendo:\n"
        "- Recomenda√ß√µes claras de COMPRA, VENDA ou MANTER para 3 a 5 a√ß√µes da Bovespa (com seus tickers).\n"
        "- Justificativa detalhada para cada recomenda√ß√£o, explicando os fatores considerados (macroecon√¥micos, setoriais, espec√≠ficos da empresa, not√≠cias recentes)."
        "Priorizar as a√ß√µes do 'top_10_acoes.csv' na an√°lise, mas incluir outras se forem identificadas oportunidades/riscos relevantes."
    ),
    agent=especialista_em_acoes,
    context=[tarefa_analise_cenario] # Depende da an√°lise macroecon√¥mica
)

tarefa_compilacao_relatorio_final = Task(
    description=(
        "**Sua responsabilidade √© GERAR e ESCREVER O CONTE√öDO COMPLETO do relat√≥rio de investimento final em formato markdown. N√ÉO descreva o que voc√™ faria ou o que o relat√≥rio conteria; em vez disso, PRODUZA o relat√≥rio AGORA.**\n\n"
        "Para fazer isso, voc√™ DEVE:\n"
        "1. Unificar a 'an√°lise do cen√°rio macroecon√¥mico' (fornecida pelo Analista Macroecon√¥mico) e as 'indica√ß√µes de a√ß√µes' (fornecidas pelo Especialista em A√ß√µes) em um relat√≥rio final coeso, detalhado e bem formatado.\n"
        "2. Escrever o relat√≥rio em linguagem clara, profissional e acess√≠vel para investidores, utilizando a sintaxe markdown para uma excelente estrutura (t√≠tulos H2 e H3, subt√≠tulos, listas com marcadores ou numeradas, negrito para destaques).\n"
        "3. Detalhar as principais conclus√µes da an√°lise macroecon√¥mica e explicar explicitamente como elas fundamentam as estrat√©gias de investimento e as recomenda√ß√µes de a√ß√µes espec√≠ficas.\n"
        "4. Apresentar de forma proeminente e individualizada cada indica√ß√£o de a√ß√£o (COMPRA, VENDA, MANTER), incluindo o ticker da a√ß√£o e um par√°grafo de justificativa claro, conciso e bem fundamentado para cada uma.\n"
        "5. Incluir um breve ap√™ndice no final do relat√≥rio mencionando as fontes de dados prim√°rias (os arquivos CSV: 'indicadores_economicos.csv', 'noticias_investimento.csv', 'top_10_acoes.csv') e o uso de pesquisa online para informa√ß√µes complementares.\n\n"
        "**Utilize as informa√ß√µes das an√°lises das tarefas anteriores, que est√£o dispon√≠veis no contexto, como base fundamental para escrever este relat√≥rio.**"
    ),
    expected_output=(
        "O TEXTO COMPLETO e FINAL de um Relat√≥rio de Investimento em formato markdown na l√≠ngua portuguesa do brasil. O relat√≥rio DEVE ser abrangente e conter as seguintes se√ß√µes PREENCHIDAS com an√°lises, dados e texto gerado:\n"
        "### Sum√°rio Executivo\n"
        "   - (Texto do sum√°rio com as principais conclus√µes e recomenda√ß√µes de investimento.)\n"
        "### An√°lise do Cen√°rio Macroecon√¥mico\n"
        "   - (Texto da an√°lise detalhada dos indicadores economicos, not√≠cias relevantes e seus impactos esperados no mercado de a√ß√µes.)\n"
        "### Indica√ß√µes de A√ß√µes Detalhadas\n"
        "   - (Para cada a√ß√£o recomendada: Ticker, Recomenda√ß√£o [COMPRA/VENDA/MANTER], e Justificativa completa e bem fundamentada.)\n"
        "### Breves Considera√ß√µes sobre Riscos e Oportunidades\n"
        "   - (Texto com uma vis√£o geral dos riscos e oportunidades identificados no cen√°rio atual.)\n"
        "### Ap√™ndice: Fontes de Dados\n"
        "   - (Texto mencionando as fontes de dados utilizadas.)"
    ),
    agent=redator_de_relatorios_de_investimento,
    context=[tarefa_analise_cenario, tarefa_indicacao_acoes],
)

# === Criar o time (Crew) ===
crew_recomendacao_de_acoes = Crew(
    agents=[analista_macroeconomico, especialista_em_acoes, redator_de_relatorios_de_investimento],
    tasks=[tarefa_analise_cenario, tarefa_indicacao_acoes, tarefa_compilacao_relatorio_final],
    verbose=True, # verbose=True para ver os pensamentos dos agentes
    manager_llm=llm,
    #process=Process.hierarchical, # Habilita o "gerente" para orquestrar com mais "racioc√≠nio"
)

# === Executar o Crew ===
print("Iniciando a an√°lise da Crew para recomenda√ß√£o de a√ß√µes...")
resultado_crew = crew_recomendacao_de_acoes.kickoff() # Mudei o nome da vari√°vel para clareza

print("\n\n=== OBJETO CrewOutput COMPLETO (para depura√ß√£o) ===\n")
print(resultado_crew) # Isso vai mostrar a estrutura do objeto CrewOutput

# Tente acessar o resultado textual. A forma exata pode variar um pouco
# dependendo da vers√£o do CrewAI e do que a sua Crew retorna.
# Tentativa 1: Acessar um atributo 'result' ou 'raw' se o objeto for um Pydantic model
# ou tiver um atributo espec√≠fico para o output textual.
# Vamos testar com str() primeiro, que √© mais gen√©rico.
if hasattr(resultado_crew, 'raw') and isinstance(resultado_crew.raw, str):
    texto_para_salvar = resultado_crew.raw
elif hasattr(resultado_crew, 'result') and isinstance(resultado_crew.result, str): # Comum em vers√µes mais antigas ou espec√≠ficas
    texto_para_salvar = resultado_crew.result
else:
    # Se n√£o houver um atributo √≥bvio, converter o objeto todo para string
    # pode funcionar se o __str__ do CrewOutput for o relat√≥rio final.
    texto_para_salvar = str(resultado_crew)

print("\n\n=== RELAT√ìRIO FINAL DE INVESTIMENTO GERADO PELA CREW (TEXTO) ===\n")
print(texto_para_salvar)


# Salvar o resultado em um arquivo .md ===
nome_arquivo_saida = "../data/relatorio_indicacao_acoes.md"
with open(nome_arquivo_saida, "w", encoding="utf-8") as f:
    f.write(texto_para_salvar) # Agora estamos passando uma string
print(f"\n\nRelat√≥rio salvo em '{nome_arquivo_saida}'")